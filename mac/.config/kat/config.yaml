# yaml-language-server: $schema=./config.v1beta1.json
apiVersion: kat.jacobcolvin.com/v1beta1
kind: Configuration
ui:
  # https://xyproto.github.io/splash/docs/
  theme: "onedark"
  minimumDelay: 200ms
  compact: false
rules:
  - profile: ks
    match: >-
      files.exists(f,
        pathBase(f) in ["kustomization.yaml", "kustomization.yml"])
  - profile: helm
    match: >-
      files.exists(f,
        pathBase(f) in ["Chart.yaml", "Chart.yml"] &&
        yamlPath(f, "$.apiVersion") == "v2")
  - profile: kcl
    match: >-
      files.exists(f, pathExt(f) in [".k"])
  - profile: yaml
    match: >-
      files.exists(f,
        pathExt(f) in [".yaml", ".yml"])
profiles:
  helm:
    source: >-
      files.filter(f, pathExt(f) in [".yaml", ".yml", ".tpl"])
    command: helm
    args: [template, .]
    extraArgs: [-g]
    envFrom: &helmEnvFrom
      - callerRef:
          pattern: ^HELM_.+
    hooks:
      init:
        - command: helm
          args: [version, --short]
      preRender:
        - command: helm
          args: [dependency, build]
          envFrom: *helmEnvFrom
    plugins:
      dry-run:
        description: invoke helm dry-run
        keys: [{ code: H }]
        command: helm
        args: [install, ., -g, --dry-run]
        envFrom: *helmEnvFrom
  ks:
    source: >-
      files.filter(f, pathExt(f) in [".yaml", ".yml"])
    command: kustomize
    args: [build, .]
    hooks:
      init:
        - command: kustomize
          args: [version]
  yaml:
    source: >-
      files.filter(f, pathExt(f) in [".yaml", ".yml"])
    command: sh
    args:
      - -c
      - yq eval-all '.' *.yaml
    hooks:
      init:
        - command: yq
          args: [-V]
  kcl:
    source: >-
      files.filter(f, pathExt(f) in [".k"])
    command: kcl
    args: [run]
    hooks:
      init:
        - command: kcl
          args: [-v]
